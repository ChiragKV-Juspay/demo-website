// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Home from "./MobileScreens/DomesticMoneyTransfer/Home.res.mjs";
import * as Login from "./MobileScreens/DomesticMoneyTransfer/Login.res.mjs";
import * as React from "react";
import * as Drawer from "./Components/Drawer.res.mjs";
import * as FaceID from "./MobileScreens/UserOnboarding/FaceID.res.mjs";
import * as Caml_obj from "rescript/lib/es6/caml_obj.js";
import * as EnterPin from "./MobileScreens/DomesticMoneyTransfer/EnterPin.res.mjs";
import * as QRScreen from "./MobileScreens/UserOnboarding/QRScreen.res.mjs";
import * as Transfer from "./MobileScreens/DomesticMoneyTransfer/Transfer.res.mjs";
import * as Accordion from "./Components/Accordion.res.mjs";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as EnterAmount from "./MobileScreens/DomesticMoneyTransfer/EnterAmount.res.mjs";
import * as VerifyIdentity from "./MobileScreens/UserOnboarding/VerifyIdentity.res.mjs";
import * as LinkBankAccount from "./MobileScreens/UserOnboarding/LinkBankAccount.res.mjs";
import * as OnboardingLogin from "./MobileScreens/UserOnboarding/OnboardingLogin.res.mjs";
import * as JsxRuntime from "react/jsx-runtime";
import Icon from "@mui/material/Icon";
import * as TransactionCompleted from "./MobileScreens/DomesticMoneyTransfer/TransactionCompleted.res.mjs";
import * as Browser from "@simplewebauthn/browser";

function App(props) {
  var match = React.useState(function () {
        return "OnboardingLogin";
      });
  var setCurrentOnboardingScreen = match[1];
  var currentOnboardingScreen = match[0];
  var match$1 = React.useState(function () {
        return "Login";
      });
  var setCurrentTransferScreen = match$1[1];
  var currentTransferScreen = match$1[0];
  var match$2 = React.useState(function () {
        return "User Onboarding";
      });
  var setSelectedOption = match$2[1];
  var match$3 = React.useState(function () {
        return null;
      });
  var setUserData = match$3[1];
  var userData = match$3[0];
  var match$4 = React.useState(function () {
        return null;
      });
  var setTransactionsHistory = match$4[1];
  var match$5 = React.useState(function () {
        return null;
      });
  var setUserAssets = match$5[1];
  var match$6 = React.useState(function () {
        return null;
      });
  var setTransactionResult = match$6[1];
  var match$7 = React.useState(function () {
        return false;
      });
  var setShowAuthInitiated = match$7[1];
  var match$8 = React.useState(function () {
        return false;
      });
  var setShowTrasactionConfirm = match$8[1];
  var match$9 = React.useState(function () {
        return false;
      });
  var setOpenDrawer = match$9[1];
  var handlePrevScreen = function () {
    switch (currentTransferScreen) {
      case "Login" :
          return ;
      case "Home" :
          return setCurrentTransferScreen(function (param) {
                      return "Login";
                    });
      case "EnterAmount" :
          return setCurrentTransferScreen(function (param) {
                      return "Transfer";
                    });
      case "EnterPin" :
          return setCurrentTransferScreen(function (param) {
                      return "EnterAmount";
                    });
      case "Transfer" :
          return setCurrentTransferScreen(function (param) {
                      return "Home";
                    });
      case "TransactionCompleted" :
          return setCurrentTransferScreen(function (param) {
                      return "EnterPin";
                    });
      
    }
  };
  var handleNextScreen = function () {
    switch (currentTransferScreen) {
      case "Login" :
          return setCurrentTransferScreen(function (param) {
                      return "Home";
                    });
      case "Home" :
          return setCurrentTransferScreen(function (param) {
                      return "Transfer";
                    });
      case "EnterAmount" :
          return setCurrentTransferScreen(function (param) {
                      return "EnterPin";
                    });
      case "EnterPin" :
          return setCurrentTransferScreen(function (param) {
                      return "TransactionCompleted";
                    });
      case "Transfer" :
          return setCurrentTransferScreen(function (param) {
                      return "EnterAmount";
                    });
      case "TransactionCompleted" :
          return ;
      
    }
  };
  var fetchData = async function () {
    var response = await fetch("https://finternet-app-api.shuttleapp.rs/v1/users/exampleUserId");
    var json = await response.json();
    console.log(json);
    return setUserData(function (param) {
                return json;
              });
  };
  var fetchUserAssets = async function () {
    var response = await fetch("https://finternet-app-api.shuttleapp.rs/v1/users/exampleUserId/assets");
    var json = await response.json();
    console.log(json);
    return setUserAssets(function (param) {
                return json;
              });
  };
  var simpleWebShit = async function () {
    var transferBody = {
      username: "1234"
    };
    var response = await fetch("https://webauthn-fin-production.up.railway.app/api/passkey/registerStart", {
          method: "POST",
          body: Caml_option.some(Belt_Option.getExn(JSON.stringify(transferBody))),
          headers: Caml_option.some(new Headers({
                    "Content-type": "application/json"
                  }))
        });
    var json = await response.json();
    var attestationResponse = await Browser.startRegistration(json);
    console.log(attestationResponse);
    var registerFinishResponse = await fetch("https://webauthn-fin-production.up.railway.app/api/passkey/registerFinish", {
          method: "POST",
          body: Caml_option.some(Belt_Option.getExn(JSON.stringify(attestationResponse))),
          headers: Caml_option.some(new Headers({
                    "Content-type": "application/json"
                  }))
        });
    console.log(registerFinishResponse);
  };
  var fetchUserTransactionsHistory = async function () {
    var response = await fetch("https://finternet-app-api.shuttleapp.rs/v1/users/exampleUserId/assets/123/history");
    var json = await response.json();
    console.log(json);
    return setTransactionsHistory(function (param) {
                return json;
              });
  };
  var handleNavigateToHome = function () {
    setCurrentTransferScreen(function (param) {
          return "Home";
        });
    fetchData();
    fetchUserTransactionsHistory();
    fetchUserAssets();
  };
  var performTransfer = function () {
    var postTransfer = async function () {
      var transferBody = {
        sender: "arnab.d@unifiedledger1",
        recipient: "ales@ledger",
        asset: {
          currency: "USD",
          unit: 200,
          token_manager: "tokenManagerAddress"
        },
        signature: "signature"
      };
      var response = await fetch("https://finternet-app-api.shuttleapp.rs/v1/users/exampleUserId/assets/123/asset:transfer", {
            method: "POST",
            body: Caml_option.some(Belt_Option.getExn(JSON.stringify(transferBody))),
            headers: Caml_option.some(new Headers({
                      "Content-type": "application/json"
                    }))
          });
      var json = await response.json();
      return setTransactionResult(function (param) {
                  return json;
                });
    };
    postTransfer();
  };
  var handleNavigateToTransactionCompleted = function () {
    setCurrentTransferScreen(function (param) {
          return "TransactionCompleted";
        });
    setShowTrasactionConfirm(function (param) {
          return true;
        });
    performTransfer();
  };
  var handleNavigateToEnterPin = function () {
    setCurrentTransferScreen(function (param) {
          return "EnterPin";
        });
    setShowAuthInitiated(function (param) {
          return true;
        });
  };
  var handleNavigateToVerfiyIdentity = function () {
    setCurrentOnboardingScreen(function (param) {
          return "FaceID";
        });
    simpleWebShit();
    setCurrentOnboardingScreen(function (param) {
          return "VerifyIdentity";
        });
  };
  var handleNavigateToQRScreen = function () {
    setCurrentOnboardingScreen(function (param) {
          return "QRScreen";
        });
  };
  var renderTransferContent = function () {
    switch (currentTransferScreen) {
      case "Login" :
          return JsxRuntime.jsx(Login.make, {
                      onNavigateToHome: (function () {
                          handleNavigateToHome();
                        })
                    });
      case "Home" :
          return JsxRuntime.jsx(Home.make, {
                      onNavigateToReceiversList: (function () {
                          setCurrentTransferScreen(function (param) {
                                return "Transfer";
                              });
                        })
                    });
      case "EnterAmount" :
          return JsxRuntime.jsx(EnterAmount.make, {
                      onNavigateToEnterPin: (function (param) {
                          handleNavigateToEnterPin();
                        })
                    });
      case "EnterPin" :
          return JsxRuntime.jsx(EnterPin.make, {
                      onNavigateToTransactionCompleted: (function (param) {
                          handleNavigateToTransactionCompleted();
                        })
                    });
      case "Transfer" :
          return JsxRuntime.jsx(Transfer.make, {
                      onNavigateToEnterAmount: (function (param) {
                          setCurrentTransferScreen(function (param) {
                                return "EnterAmount";
                              });
                        })
                    });
      case "TransactionCompleted" :
          return JsxRuntime.jsx(TransactionCompleted.make, {
                      onNavigateToHome: (function (param) {
                          setCurrentTransferScreen(function (param) {
                                return "Home";
                              });
                        })
                    });
      
    }
  };
  var renderOnboardingContent = function () {
    switch (currentOnboardingScreen) {
      case "OnboardingLogin" :
          return JsxRuntime.jsx(OnboardingLogin.make, {
                      onNavigateToVerifyIdentity: (function () {
                          handleNavigateToVerfiyIdentity();
                        })
                    });
      case "VerifyIdentity" :
          return JsxRuntime.jsx(VerifyIdentity.make, {
                      onNavigateToQRScreen: (function () {
                          setCurrentOnboardingScreen(function (param) {
                                return "QRScreen";
                              });
                        })
                    });
      case "FaceID" :
          return JsxRuntime.jsx(FaceID.make, {
                      onNavigateToQRScreen: (function (param) {
                          return handleNavigateToQRScreen;
                        })
                    });
      case "QRScreen" :
          return JsxRuntime.jsx(QRScreen.make, {
                      onNavigateToLinkBankAccount: (function () {
                          setCurrentOnboardingScreen(function (param) {
                                return "LinkBankAccount";
                              });
                        })
                    });
      case "LinkBankAccount" :
          return JsxRuntime.jsx(LinkBankAccount.make, {});
      
    }
  };
  var handleDrawerSelection = function (selectedOption) {
    console.log(selectedOption);
    switch (selectedOption) {
      case "Domestic Money Transfer" :
          return setSelectedOption(function (param) {
                      return "Domestic Money Transfer";
                    });
      case "User Onboarding" :
          return setSelectedOption(function (param) {
                      return "User Onboarding";
                    });
      default:
        throw {
              RE_EXN_ID: "Match_failure",
              _1: [
                "App.res",
                199,
                4
              ],
              Error: new Error()
            };
    }
  };
  var tmp;
  switch (match$2[0]) {
    case "Domestic Money Transfer" :
        tmp = renderTransferContent();
        break;
    case "User Onboarding" :
        tmp = renderOnboardingContent();
        break;
    default:
      throw {
            RE_EXN_ID: "Match_failure",
            _1: [
              "App.res",
              233,
              11
            ],
            Error: new Error()
          };
  }
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx("img", {
                                      className: "h-10 w-10",
                                      alt: "Description of image",
                                      src: "/finternetLogo.png",
                                      onClick: (function (param) {
                                          setOpenDrawer(function (param) {
                                                return true;
                                              });
                                        })
                                    }),
                                JsxRuntime.jsx("div", {
                                      children: "Playground",
                                      className: "self-center"
                                    })
                              ],
                              className: "flex"
                            }),
                        JsxRuntime.jsx(Icon, {
                              baseClassName: "GitHubIcon"
                            })
                      ],
                      className: "flex bg-red-200 "
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx("div", {
                                      children: tmp,
                                      className: "bg-white h-4/5 self-center w-full p-4 shadow-lg rounded-lg   overflow-auto "
                                    }),
                                JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx("button", {
                                              children: "<",
                                              onClick: (function (param) {
                                                  handlePrevScreen();
                                                })
                                            }),
                                        JsxRuntime.jsx("button", {
                                              children: ">",
                                              onClick: (function (param) {
                                                  handleNextScreen();
                                                })
                                            })
                                      ],
                                      className: " flex flex-row justify-around text-xl text-gray-400"
                                    })
                              ],
                              className: "flex flex-col h-full w-1/5 justify-center gap-4"
                            }),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx("div", {
                                      children: "Domestic Transfer Activity Log",
                                      className: "text-2xl"
                                    }),
                                Caml_obj.notequal(userData, null) ? JsxRuntime.jsx(Accordion.make, {
                                        userData: userData,
                                        userAssets: match$5[0],
                                        transactionsHistory: match$4[0],
                                        showAuthInitiated: match$7[0],
                                        showTransactionConfirm: match$8[0],
                                        transactionResult: match$6[0]
                                      }) : JsxRuntime.jsx("div", {
                                        children: "Initiate transaction to view activity logs",
                                        className: "text-sm"
                                      })
                              ],
                              className: "ml-4 p-4  bg-gray-100 rounded-lg w-3/5 h-full flex flex-col gap-3 overflow-auto"
                            }),
                        JsxRuntime.jsx(Drawer.make, {
                              openDrawer: match$9[0],
                              setOpenDrawer: setOpenDrawer,
                              handleDrawerSelection: handleDrawerSelection
                            })
                      ],
                      className: "flex justify-center  h-screen w-screen flex-row  jc p-4  font-space-grotesk "
                    })
              ]
            });
}

var make = App;

export {
  make ,
}
/* Home Not a pure module */
